@page
@model Ruleta.Pages.RegisterModel
@{
    Layout = "~/Pages/Shared/_Layout.cshtml";
    ViewData["Title"] = "Registrate";
}
<div class="container mt-5">
    <div class="row justify-content-center mt-5">
        <div class="col-lg-6 mt-5">
            <div class="card">
                <div class="card-body">
                    <h6 class="text-center">Regístrate</h6>
                    <hr />
                    <form method="POST" class="needs-validation" novalidate>
                        <div class="form-row">
                            <div class="col-md-6 mb-3">
                                <label for="validationCustom01">Nombre de usuario</label>
                                <input type="text" class="form-control" id="validationCustom01" name="Username" autocomplete="off" required>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="validationCustom02">Contraseña</label>
                                <input type="password" class="form-control" id="validationCustom02" name="Password" autocomplete="off" required>
                            </div>
                        </div>
                        <div class="text-center">
                            <button class="btn btn-success" type="submit" asp-page-handler="Register">Regístrate</button>
                        </div>
                        <div class="text-center">
                            <a asp-page="Index">¿Ya tienes una cuenta? Ir</a>
                        </div>
                    </form>
                </div>
            </div>

            <script>
                // Example starter JavaScript for disabling form submissions if there are invalid fields
                (function () {
                    'use strict';
                    window.addEventListener('load', function () {
                        // Fetch all the forms we want to apply custom Bootstrap validation styles to
                        var forms = document.getElementsByClassName('needs-validation');
                        // Loop over them and prevent submission
                        var validation = Array.prototype.filter.call(forms, function (form) {
                            form.addEventListener('submit', function (event) {
                                if (form.checkValidity() === false) {
                                    event.preventDefault();
                                    event.stopPropagation();
                                }
                                form.classList.add('was-validated');
                            }, false);
                        });
                    }, false);
                })();
            </script>
        </div>
    </div>
</div>
